{"version":3,"sources":["components/Seasons.js","components/Home.js","components/Players.js","components/Matches.js","components/SeasonDetails.js","components/Footer.js","utils/ARBApi.js","App.js","serviceWorker.js","index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","useStyles1","makeStyles","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","useStyles2","container","maxHeight","header","fontWeight","title","flexGrow","display","breakpoints","up","search","position","borderRadius","shape","fade","common","white","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Seasonss","seasons","seasonSelect","useState","query","setQuery","setPage","filteredSeasons","searchMatch","RegExp","escareRegExp","filter","season","test","year","console","log","sort","sortBy","emptyRows","min","length","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","value","onChange","handleQuery","target","TableContainer","Table","stickyHeader","TableHead","TableCell","TableBody","slice","map","row","key","id","component","scope","league","points","v","d","l","gf","gs","dr","style","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","ActionsComponent","Welcome","onSeasonSelect","gutterBottom","StyledTableCell","head","black","body","fontSize","useStyles","Players","players","seasonID","seasonLabel","Paper","country","surname","name","role","number","appearances","goals","yellowcard","redcard","align","LinearProgress","Matches","matches","table","day","date","home","gh","ga","away","TabPanel","children","index","other","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","preventDefault","background","paper","SeasonDetails","valueTab","setValueTab","useEffect","tabEnabled","Tabs","newValue","label","icon","href","selected","menuButton","marginRight","Header","copyright","api","process","REACT_APP_ATTR_API_URL","token","localStorage","random","toString","substr","headers","getAll","controller","a","fetch","then","res","json","getAllByID","textAlign","text","secondary","App","setSeasonID","setSeasonLabel","setSeasons","setPlayers","setMatches","ARBApi","m","Grid","item","xs","Boolean","window","location","hostname","match","createMuiTheme","primary","main","contrastText","red","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0f99a335.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport escareRegExp from 'escape-string-regexp'\nimport sortBy from 'sort-by'\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  }\n}))(TableRow);\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles((theme) => ({\n  container: {\n    maxHeight: 440,  \n  },\n  header:{\n    fontWeight: 'bold'\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  }}));\n\nexport default function Seasonss({seasons, seasonSelect}) {\n  const classes = useStyles2();\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(0);\n  const rowsPerPage = 10;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleQuery = (query) => {\n    console.log(\"query\", query);\n    setQuery(query);\n  };\n\n  let filteredSeasons = seasons;\n  if (query) {\n    const searchMatch = new RegExp(escareRegExp(query),'i');\n    filteredSeasons = seasons.filter((season) => searchMatch.test(season.year));\n    console.log(filteredSeasons, filteredSeasons);\n  }\n  filteredSeasons.sort(sortBy('-year'));\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, filteredSeasons.length - page * rowsPerPage);\n  console.log(\"emptyRows\",emptyRows);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\" noWrap>\n          Stagioni Cagliari Calcio\n        </Typography>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SportsSoccerIcon />\n          </div>\n          <InputBase\n            placeholder=\"Cerca..\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n            value={query}\n            onChange={(event => handleQuery(event.target.value))}            \n          />\n        </div>\n      </Toolbar>\n    </AppBar>\n    <TableContainer className={classes.container}>\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.header}>Anno</TableCell>\n            <TableCell className={classes.header}>Serie</TableCell>\n            <TableCell className={classes.header}>Punti</TableCell>\n            <TableCell className={classes.header}>Posizione</TableCell>\n            <TableCell className={classes.header}>V</TableCell>\n            <TableCell className={classes.header}>P</TableCell>\n            <TableCell className={classes.header}>S</TableCell>\n            <TableCell className={classes.header}>GF</TableCell>\n            <TableCell className={classes.header}>GS</TableCell>\n            <TableCell className={classes.header}>DR</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? filteredSeasons.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : filteredSeasons\n          ).map((row) => (\n            <StyledTableRow key={row.id} onClick={() => seasonSelect(row.id, row.year)}>\n              <TableCell component=\"th\" scope=\"row\">{row.year} </TableCell>\n              <TableCell>{row.league}</TableCell>\n              <TableCell>{row.points}</TableCell>\n              <TableCell>{row.position}</TableCell>\n              <TableCell>{row.v}</TableCell>\n              <TableCell>{row.d}</TableCell>\n              <TableCell>{row.l}</TableCell>\n              <TableCell>{row.gf}</TableCell>\n              <TableCell>{row.gs}</TableCell>\n              <TableCell>{row.dr}</TableCell>\n            </StyledTableRow>\n          ))}\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[10]}\n              colSpan={10}\n              count={filteredSeasons.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n}","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Seasons from './Seasons.js'\n\nexport default function Welcome({seasons, onSeasonSelect}) {\n    return (\n        <Fragment>\n            <Typography variant='subtitle1' gutterBottom><b>ArchivioRossoBlu.it</b> nasce dalla passione per il <b>Cagliari Calcio</b> e le <b>statistiche</b> di un gruppo di ragazzi. Il sito contiene dati aggiornati dalla stagione <b>1947/1948</b> ad oggi.</Typography>  \n            <Seasons seasons={seasons} seasonSelect={onSeasonSelect}></Seasons>\n        </Fragment> \n    )\n}","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 12,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  }\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    maxHeight: 440,  \n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  header:{\n    fontWeight: 'bold'\n  },\n})\n);\n\nexport default function Players({players, seasonID, seasonLabel}) {\n  const classes = useStyles();\n  console.log(\"season\", seasonID);\n  console.log(\"seasonLabel\", seasonLabel);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Rosa Stagione {seasonLabel}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>      \n          <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell className={classes.header}>Giocatore</StyledTableCell>\n              <StyledTableCell className={classes.header}>Ruolo</StyledTableCell>\n              <StyledTableCell className={classes.header}>Numero</StyledTableCell>\n              <StyledTableCell className={classes.header}>Presenze</StyledTableCell>\n              <StyledTableCell className={classes.header}>Gol</StyledTableCell>\n              <StyledTableCell className={classes.header}>Ammonizioni</StyledTableCell>\n              <StyledTableCell className={classes.header}>Espulsioni</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n        {players.length > 0 ? (\n              players.map((row) => (\n                <StyledTableRow key={row.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                  [{row.country}] {row.surname} {row.name}\n                  </StyledTableCell>\n                  <StyledTableCell>{row.role}</StyledTableCell>\n                  <StyledTableCell>{row.number}</StyledTableCell>\n                  <StyledTableCell>{row.appearances}</StyledTableCell>\n                  <StyledTableCell>{row.goals}</StyledTableCell>\n                  <StyledTableCell>{row.yellowcard}</StyledTableCell>\n                  <StyledTableCell>{row.redcard}</StyledTableCell>\n                </StyledTableRow>\n              ))\n        ):(\n          seasonID.length>0 ? ( \n          <StyledTableRow key='none'>\n            <StyledTableCell align=\"right\" colSpan={6}>\n              <LinearProgress />\n            </StyledTableCell>  \n          </StyledTableRow>  \n          ):(\n            <StyledTableRow key='none'>\n            <StyledTableCell align=\"right\" colSpan={6}>Seleziona stagione.</StyledTableCell>  \n          </StyledTableRow>  \n          ))}\n            </TableBody>\n          </Table>\n      </TableContainer>\n      </Paper>\n      </div>\n  );\n}\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 12,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    maxHeight: 440,  \n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  header:{\n    fontWeight: 'bold'\n  },\n})\n);\n\nexport default function Matches({matches, seasonID, seasonLabel}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Campionago Stagione {seasonLabel}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell className={classes.header}>Giornata</StyledTableCell>\n              <StyledTableCell className={classes.header}>Data</StyledTableCell>\n              <StyledTableCell className={classes.header}>Partita</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n        {matches.length > 0 ? (\n              matches.map((row) => (\n                <StyledTableRow key={row.id}>\n                  <StyledTableCell>{row.day}</StyledTableCell>\n                  <StyledTableCell>{row.date}</StyledTableCell>\n                  <StyledTableCell>\n              {row.home} {row.gh} - {row.ga} {row.away}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))\n        ):(\n          seasonID.length>0 ? ( \n          <StyledTableRow key='none'>\n            <StyledTableCell align=\"right\" colSpan={4}>\n              <LinearProgress />\n            </StyledTableCell>  \n          </StyledTableRow>  \n          ):(\n            <StyledTableRow key='none'>\n            <StyledTableCell align=\"right\" colSpan={4}>Seleziona stagione.</StyledTableCell>  \n          </StyledTableRow>  \n          ))}\n            </TableBody>\n          </Table>\n      </TableContainer>\n      </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport EventIcon from '@material-ui/icons/Event';\nimport Home from './Home.js'\nimport Players from './Players.js'\nimport Matches from './Matches.js'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SeasonDetails({players, matches, seasonID, seasons, onSeasonSelect, seasonLabel}) {\n  const classes = useStyles();\n  const [valueTab, setValueTab] = useState(0);\n  \n  useEffect(() => {\n    if (seasonID>0){\n      setValueTab(1);\n    }\n  }, [seasonID]);\n\n  const handleChange = (event, newValue) => {\n    setValueTab(newValue);\n  };\n  let tabEnabled = true;\n\n  if (seasonID>0){\n    tabEnabled = false;\n  }\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={valueTab}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"Home\" icon={<HomeIcon />} href=\"/home\" {...a11yProps(0)}/>\n          <LinkTab label=\"Rosa\" icon={<PeopleIcon />} href=\"/players\" {...a11yProps(1)} disabled={tabEnabled}/>\n          <LinkTab label=\"Campionato\" icon={<EventIcon />} href=\"/matches\" {...a11yProps(2)} disabled={tabEnabled}/>\n        </Tabs>\n      </AppBar>\n      <TabPanel value={valueTab} index={0}>\n        <Home seasons={seasons} onSeasonSelect={onSeasonSelect}></Home>\n      </TabPanel>\n      <TabPanel value={valueTab} index={1} selected>\n        <Players players={players} seasonID={seasonID} seasonLabel={seasonLabel}></Players>\n      </TabPanel>\n      <TabPanel value={valueTab} index={2}>\n        <Matches matches={matches} seasonID={seasonID} seasonLabel={seasonLabel}></Matches>\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header({title, copyright}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant='subtitle2'><p>Questo sito <b>NON</b> è collegato in nessun modo al Cagliari Calcio spa. I marchi e i loghi presenti sul sito sono dei rispettivi proprietari.\n            Questo sito non è testata giornalistica e viene aggiornato senza alcuna periodicità.Non può essere considerato in alcun modo un prodotto editoriale ai sensi della legge n. 62 del 7 marzo 2001</p>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","const api = process.env.REACT_APP_ATTR_API_URL || 'https://www.archiviorossoblu.it/api'\n\nlet token = localStorage.token\n\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const getAll = async (controller) =>\n  fetch(`${api}/${controller}.php`, { headers })\n    .then(res => res.json())\n\nexport const getAllByID = async (controller, id) =>\n  fetch(`${api}/${controller}.php?id=${id}`, { headers })\n    .then(res => res.json())\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n//import Header from './components/Header'\nimport SeasonDetails from './components/SeasonDetails.js'\nimport Footer from './components/Footer'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as ARBApi from './utils/ARBApi';\nimport {Grid, Paper, Box} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'justify',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  \n  const [seasonID, setSeasonID] = useState(0);\n  const [seasonLabel, setSeasonLabel] = useState('');\n  const [seasons, setSeasons] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    if (seasonID === 0){\n      ARBApi.getAll(`seasons`, seasonID).then((seasons) => {\n        setSeasons(seasons);\n      });\n    }\n  }, [seasonID]);\n\n  const changeSeason = (seasonID, year) => {\n    ARBApi.getAllByID(`players`, seasonID).then((players) => {\n      setPlayers(players);\n    });\n    ARBApi.getAllByID(`matches`, seasonID).then((matches) => {\n      setMatches(matches);\n    });\n    setSeasonID(seasonID);\n    setSeasonLabel(year);\n  }\n\n  return( \n    <Box component=\"span\" m={1}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <SeasonDetails \n              players={players} \n              matches={matches} \n              seasons={seasons} \n              seasonID={seasonID} \n              seasonLabel={seasonLabel} \n              onSeasonSelect={changeSeason}>\n            </SeasonDetails>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Footer/>\n          </Paper>\n        </Grid>\n      </Grid>\n      </Box>\n    )\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#082D68',\n        contrastText: '#FFFFFF',\n      },\n      secondary: {\n        // main: '#CA2331',\n        main: '#CA2331',\n      },\n      red: '#CA2331',\n    },\n  })\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n  </ThemeProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}