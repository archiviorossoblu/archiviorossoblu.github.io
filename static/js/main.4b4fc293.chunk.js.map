{"version":3,"sources":["components/Seasons.js","components/Home.js","components/Players.js","components/Matches.js","components/SeasonDetails.js","components/Footer.js","utils/ARBApi.js","App.js","serviceWorker.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","white","color","black","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","width","title","flexGrow","display","breakpoints","up","search","position","borderRadius","shape","fade","marginLeft","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Seasons","seasons","seasonSelect","classes","useState","query","setQuery","filteredSeasons","searchMatch","RegExp","escareRegExp","filter","season","test","year","console","log","sort","sortBy","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","value","onChange","event","handleQuery","target","Paper","TableContainer","container","Table","stickyHeader","aria-label","TableHead","align","TableBody","length","map","row","key","id","onClick","component","scope","league","points","v","d","l","gf","gs","dr","colSpan","LinearProgress","Welcome","onSeasonSelect","gutterBottom","Players","players","seasonID","seasonLabel","surname","name","role","number","appearances","goals","country","table","Matches","matches","day","date","home","gh","ga","away","TabPanel","props","children","index","other","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","preventDefault","background","paper","SeasonDetails","valueTab","setValueTab","useEffect","Tabs","newValue","label","icon","href","selected","menuButton","marginRight","Header","copyright","api","process","REACT_APP_ATTR_API_URL","token","localStorage","Math","random","toString","substr","headers","getAll","controller","a","fetch","then","res","json","getAllByID","textAlign","text","secondary","App","setSeasonID","setSeasonLabel","setSeasons","setPlayers","setMatches","ARBApi","Grid","item","xs","subtitle","Boolean","window","location","hostname","match","createMuiTheme","primary","main","contrastText","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b4fc293.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport escareRegExp from 'escape-string-regexp'\nimport sortBy from 'sort-by'\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 12,\n  }\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  }}));\n\nexport default function Seasons({seasons, seasonSelect}) {\n  const classes = useStyles();\n  const [query, setQuery] = useState('');\n\n  const handleQuery = (query) => {\n    console.log(\"query\", query);\n    setQuery(query);\n  };\n\n  let filteredSeasons = seasons;\n  if (query) {\n    const searchMatch = new RegExp(escareRegExp(query),'i');\n    filteredSeasons = seasons.filter((season) => searchMatch.test(season.year));\n    console.log(filteredSeasons, filteredSeasons);\n  }\n  filteredSeasons.sort(sortBy('-year'));\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Stagioni Cagliari Calcio\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SportsSoccerIcon />\n            </div>\n            <InputBase\n              placeholder=\"Cerca..\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={query}\n              onChange={(event => handleQuery(event.target.value))}            \n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>      \n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Anno</StyledTableCell>\n              <StyledTableCell align=\"right\">Serie</StyledTableCell>\n              <StyledTableCell align=\"right\">Punti</StyledTableCell>\n              <StyledTableCell align=\"right\">Posizione</StyledTableCell>\n              <StyledTableCell align=\"right\">V</StyledTableCell>\n              <StyledTableCell align=\"right\">P</StyledTableCell>\n              <StyledTableCell align=\"right\">S</StyledTableCell>\n              <StyledTableCell align=\"right\">GF</StyledTableCell>\n              <StyledTableCell align=\"right\">GS</StyledTableCell>\n              <StyledTableCell align=\"right\">DR</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n        {filteredSeasons.length > 0 ? (\n              filteredSeasons.map((row) => (\n                <StyledTableRow key={row.id} onClick={() => seasonSelect(row.id, row.year)}>\n                  <StyledTableCell component=\"th\" scope=\"row\">{row.year} </StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.league}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.points}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.position}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.v}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.d}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.l}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.gf}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.gs}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.dr}</StyledTableCell>\n                </StyledTableRow>\n              ))\n        ):(\n          <StyledTableRow key='none'>\n              <StyledTableCell align=\"right\" colSpan={10}>\n                <LinearProgress />\n              </StyledTableCell>  \n          </StyledTableRow>  \n          )}\n            </TableBody>\n          </Table>\n      </TableContainer>\n      </Paper>\n    </div>  \n  );\n}","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Seasons from './Seasons.js'\n\nexport default function Welcome({seasons, onSeasonSelect}) {\n    return (\n        <Fragment>\n            <Typography variant='subtitle1' gutterBottom><b>ArchivioRossoBlu.it</b> nasce dalla passione per il <b>Cagliari Calcio</b> e le <b>statistiche</b> di un gruppo di ragazzi. Il sito contiene dati aggiornati dalla stagione <b>1947/1948</b> ad oggi.</Typography>  \n            <Seasons seasons={seasons} seasonSelect={onSeasonSelect}></Seasons>\n        </Fragment> \n    )\n}","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 12,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  }\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  }\n})\n);\n\nexport default function Players({players, seasonID, seasonLabel}) {\n  const classes = useStyles();\n  console.log(\"season\", seasonID);\n  console.log(\"seasonLabel\", seasonLabel);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Rosa Stagione {seasonLabel}\n          </Typography>\n        </Toolbar>\n    </AppBar>\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>      \n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Giocatore</StyledTableCell>\n            <StyledTableCell>Ruolo</StyledTableCell>\n            <StyledTableCell>Numero</StyledTableCell>\n            <StyledTableCell>Presenze</StyledTableCell>\n            <StyledTableCell>Gol</StyledTableCell>\n            <StyledTableCell>Paese</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n      {players.length > 0 ? (\n            players.map((row) => (\n              <StyledTableRow key={row.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row.surname} {row.name}\n                </StyledTableCell>\n                <StyledTableCell>{row.role}</StyledTableCell>\n                <StyledTableCell>{row.number}</StyledTableCell>\n                <StyledTableCell>{row.appearances}</StyledTableCell>\n                <StyledTableCell>{row.goals}</StyledTableCell>\n                <StyledTableCell>{row.country}</StyledTableCell>\n              </StyledTableRow>\n            ))\n      ):(\n        seasonID.length>0 ? ( \n        <StyledTableRow key='none'>\n          <StyledTableCell align=\"right\" colSpan={6}>\n            <LinearProgress />\n          </StyledTableCell>  \n        </StyledTableRow>  \n        ):(\n          <StyledTableRow key='none'>\n          <StyledTableCell align=\"right\" colSpan={6}>Seleziona stagione.</StyledTableCell>  \n        </StyledTableRow>  \n        ))}\n          </TableBody>\n        </Table>\n    </TableContainer>\n    </Paper>\n    </div>\n  );\n}\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 12,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n  },\n});\n\nexport default function Matches({matches, seasonID}) {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n          <StyledTableCell align=\"left\">Giornata</StyledTableCell>\n              <StyledTableCell>Data</StyledTableCell>\n              <StyledTableCell>Partita</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n      {matches.length > 0 ? (\n            matches.map((row) => (\n              <StyledTableRow key={row.id}>\n                <StyledTableCell align=\"left\">{row.day}</StyledTableCell>\n                <StyledTableCell>{row.date}</StyledTableCell>\n                <StyledTableCell>\n            {row.home} {row.gh} - {row.ga} {row.away}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))\n      ):(\n        seasonID.length>0 ? ( \n        <StyledTableRow key='none'>\n          <StyledTableCell align=\"right\" colSpan={4}>\n            <LinearProgress />\n          </StyledTableCell>  \n        </StyledTableRow>  \n        ):(\n          <StyledTableRow key='none'>\n          <StyledTableCell align=\"right\" colSpan={4}>Seleziona stagione.</StyledTableCell>  \n        </StyledTableRow>  \n        ))}\n          </TableBody>\n        </Table>\n    </TableContainer>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport EventIcon from '@material-ui/icons/Event';\nimport Home from './Home.js'\nimport Players from './Players.js'\nimport Matches from './Matches.js'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SeasonDetails({players, matches, seasonID, seasons, onSeasonSelect, seasonLabel}) {\n  const classes = useStyles();\n  const [valueTab, setValueTab] = useState(0);\n  \n  useEffect(() => {\n    if (seasonID>0){\n      setValueTab(1);\n    }\n  }, [seasonID]);\n\n  const handleChange = (event, newValue) => {\n    setValueTab(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={valueTab}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"Home\" icon={<HomeIcon />} href=\"/home\" {...a11yProps(0)} />\n          <LinkTab label=\"Rosa\" icon={<PeopleIcon />} href=\"/players\" {...a11yProps(1)}/>\n          <LinkTab label=\"Campionato\" icon={<EventIcon />} href=\"/matches\" {...a11yProps(2)}/>\n        </Tabs>\n      </AppBar>\n      <TabPanel value={valueTab} index={0}>\n        <Home seasons={seasons} onSeasonSelect={onSeasonSelect}></Home>\n      </TabPanel>\n      <TabPanel value={valueTab} index={1} selected>\n        <Players players={players} seasonID={seasonID} seasonLabel={seasonLabel}></Players>\n      </TabPanel>\n      <TabPanel value={valueTab} index={2}>\n        <Matches matches={matches} seasonID={seasonID}></Matches>\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header({title, copyright}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"subtitle1\" className={classes.title}>\n            {title} {copyright} \n          </Typography>\n          <Typography variant='subtitle2'><p>Questo sito <b>NON</b> è collegato in nessun modo al Cagliari Calcio spa. I marchi e i loghi presenti sul sito sono dei rispettivi proprietari.\n            Questo sito non è testata giornalistica e viene aggiornato senza alcuna periodicità.Non può essere considerato in alcun modo un prodotto editoriale ai sensi della legge n. 62 del 7 marzo 2001</p>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","const api = process.env.REACT_APP_ATTR_API_URL || 'https://www.archiviorossoblu.it/api'\n\nlet token = localStorage.token\n\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const getAll = async (controller) =>\n  fetch(`${api}/${controller}.php`, { headers })\n    .then(res => res.json())\n\nexport const getAllByID = async (controller, id) =>\n  fetch(`${api}/${controller}.php?id=${id}`, { headers })\n    .then(res => res.json())\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n//import Header from './components/Header'\nimport SeasonDetails from './components/SeasonDetails.js'\nimport Footer from './components/Footer'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as ARBApi from './utils/ARBApi';\nimport {Grid, Paper} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'justify',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  \n  const [seasonID, setSeasonID] = useState(0);\n  const [seasonLabel, setSeasonLabel] = useState('');\n  const [seasons, setSeasons] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    if (seasonID === 0){\n      ARBApi.getAll(`seasons`, seasonID).then((seasons) => {\n        setSeasons(seasons);\n      });\n    }\n  }, [seasonID]);\n\n  const changeSeason = (seasonID, year) => {\n    ARBApi.getAllByID(`players`, seasonID).then((players) => {\n      setPlayers(players);\n    });\n    ARBApi.getAllByID(`matches`, seasonID).then((matches) => {\n      setMatches(matches);\n    });\n    setSeasonID(seasonID);\n    setSeasonLabel(year);\n  }\n\n  return( \n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <SeasonDetails \n              players={players} \n              matches={matches} \n              seasons={seasons} \n              seasonID={seasonID} \n              seasonLabel={seasonLabel} \n              onSeasonSelect={changeSeason}>\n            </SeasonDetails>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Footer \n              title='Archiviorossoblu.it' \n              subtitle='stiamo tornando'>\n            </Footer>\n          </Paper>\n        </Grid>\n      </Grid>\n  )\n  }\n\n          /*\n          <Grid item xs={12} sm={4}>\n          <Paper className={classes.paper}>\n            <Seasons seasons={seasons} onSeasonSelect={changeSeason}></Seasons>\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        */\n  /*\n  <Box className={classes.root}>\n      <Header title='Archiviorossoblu.it' subtitle='stiamo tornando'></Header>\n      <Box component=\"main\" className={classes.main}>\n        <Content \n          seasons={seasons} \n          players={players} \n          matches={matches} \n          changeSeasonDetails={onChangeSeason} \n          seasonID={seasonID}>\n        </Content>\n      </Box>  \n    </Box>\n    */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#082D68',\n        contrastText: '#FFFFFF',\n      },\n      secondary: {\n        // main: '#CA2331',\n        main: '#FFFFFF',\n    }\n    },\n  })\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n  </ThemeProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}